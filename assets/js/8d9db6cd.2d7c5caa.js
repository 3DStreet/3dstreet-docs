"use strict";(self.webpackChunk_3dstreet_docs=self.webpackChunk_3dstreet_docs||[]).push([[407],{8598:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=t(5893),r=t(1151);const i={sidebar_position:2},d="managed-street Component",o={id:"managed-street/component-managed-street",title:"managed-street Component",description:"The managed-street component manages the creation, updating, and synchronization of one or more street-segments in a 3D environment. It provides a high-level interface for handling street layouts, including support for importing from various data sources and managing street segments.",source:"@site/docs/managed-street/component-managed-street.md",sourceDirName:"managed-street",slug:"/managed-street/component-managed-street",permalink:"/docs/managed-street/component-managed-street",draft:!1,unlisted:!1,editUrl:"https://github.com/3dstreet/3dstreet-docs/tree/main/docs/managed-street/component-managed-street.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/managed-street/overview-managed-street"},next:{title:"street-segment Component",permalink:"/docs/managed-street/component-street-segment"}},a={},l=[{value:"User Interface",id:"user-interface",level:3},{value:"Properties",id:"properties",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Events",id:"events",level:3},{value:"Methods",id:"methods",level:3},{value:"insertSegment(index, type, segmentObject)",id:"insertsegmentindex-type-segmentobject",level:4},{value:"refreshFromSource()",id:"refreshfromsource",level:4},{value:"Data Source Support",id:"data-source-support",level:3},{value:"Streetmix URL",id:"streetmix-url",level:4},{value:"Streetplan URL",id:"streetplan-url",level:4},{value:"JSON Blob",id:"json-blob",level:4},{value:"JSON Schema",id:"json-schema",level:3},{value:"Notes",id:"notes",level:3},{value:"Known Limitations",id:"known-limitations",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"managed-street-component",children:[(0,s.jsx)(n.code,{children:"managed-street"})," Component"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"managed-street"})," component manages the creation, updating, and synchronization of one or more ",(0,s.jsx)(n.code,{children:"street-segment"}),"s in a 3D environment. It provides a high-level interface for handling street layouts, including support for importing from various data sources and managing street segments."]}),"\n",(0,s.jsx)(n.h3,{id:"user-interface",children:"User Interface"}),"\n",(0,s.jsxs)(n.p,{children:["A custom sidebar in 3DStreet Editor allows users to edit a subset of ",(0,s.jsx)(n.code,{children:"managed-street"})," component properties."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Street Length: Users can modify the overall length of the street through a numeric input field. This change is propagated to all segments simultaneously."}),"\n",(0,s.jsx)(n.li,{children:"Labels: A toggle control to enable or disable street labels for better visualization and identification of segments."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Managed Street Sidebar",src:t(2478).Z+"",width:"371",height:"402"})}),"\n",(0,s.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"length"}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"60"}),(0,s.jsx)(n.td,{children:"The length of the street in meters"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"sourceType"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"null"}),(0,s.jsxs)(n.td,{children:["The type of source data (",(0,s.jsx)(n.code,{children:"streetmix-url"}),", ",(0,s.jsx)(n.code,{children:"streetplan-url"}),", or ",(0,s.jsx)(n.code,{children:"json-blob"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"sourceValue"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"null"}),(0,s.jsx)(n.td,{children:"The value corresponding to the sourceType (URL or JSON string)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"synchronize"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"When set to true, triggers a refresh from the source"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsx)(n.p,{children:"This component automatically adds the following components if they don't exist:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"street-align"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"street-ground"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"street-label"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Event Name"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Event Detail"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"segments-changed"}),(0,s.jsx)(n.td,{children:"Fired when segments are added, removed, or modified"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{changeType, property?, segment?, oldValue?, newValue?, added?, removed?}"})})]})})]}),"\n",(0,s.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h4,{id:"insertsegmentindex-type-segmentobject",children:"insertSegment(index, type, segmentObject)"}),"\n",(0,s.jsx)(n.p,{children:"Inserts a new street segment at the specified index."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Example\nconst street = document.querySelector('[managed-street]');\nstreet.components['managed-street'].insertSegment(0, 'drive-lane', {\n  width: 3,\n  level: 0,\n  direction: 'outbound',\n  color: '#FFFFFF',\n  surface: 'asphalt'\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"index"})," (number): The position to insert the segment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"})," (string): The segment type (e.g., 'drive-lane', 'bike-lane')"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"segmentObject"})," (object, optional): Configuration object for the segment"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"refreshfromsource",children:"refreshFromSource()"}),"\n",(0,s.jsx)(n.p,{children:"Reloads and parses data from the specified source."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const street = document.querySelector('[managed-street]');\nstreet.components['managed-street'].refreshFromSource();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"data-source-support",children:"Data Source Support"}),"\n",(0,s.jsx)(n.h4,{id:"streetmix-url",children:"Streetmix URL"}),"\n",(0,s.jsx)(n.p,{children:"Supports importing street layouts from Streetmix URLs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<a-entity managed-street="sourceType: streetmix-url; sourceValue: https://streetmix.net/..."></a-entity>\n'})}),"\n",(0,s.jsx)(n.h4,{id:"streetplan-url",children:"Streetplan URL"}),"\n",(0,s.jsx)(n.p,{children:"Supports importing street layouts from Streetplan JSON URLs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<a-entity managed-street="sourceType: streetplan-url; sourceValue: https://..."></a-entity>\n'})}),"\n",(0,s.jsx)(n.h4,{id:"json-blob",children:"JSON Blob"}),"\n",(0,s.jsx)(n.p,{children:"Supports direct JSON configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<a-entity managed-street=\"sourceType: json-blob; sourceValue: '{...}'\"></a-entity>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"json-schema",children:"JSON Schema"}),"\n",(0,s.jsx)(n.p,{children:"The component expects street data in the following format:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"{\n  name: string,           // Name of the street\n  width: number,         // Total width in meters\n  length: number,        // Length in meters\n  segments: [{           // Array of segment objects\n    type: string,        // Segment type (e.g., 'drive-lane')\n    width: number,       // Width in meters\n    name: string,        // Display name\n    level: number,       // Vertical offset (0 or 1)\n    direction: string,   // 'inbound', 'outbound', or 'none'\n    color: string,       // Hex color code\n    surface: string,     // Surface type (e.g., 'asphalt')\n    generated?: {        // Optional generated content\n      striping?: array,  // Striping configurations\n      clones?: array    // Clone configurations\n    }\n  }]\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The component automatically handles the positioning and alignment of segments"}),"\n",(0,s.jsx)(n.li,{children:"Segments are automatically centered around the x-axis"}),"\n",(0,s.jsx)(n.li,{children:"Width calculations are performed in meters"}),"\n",(0,s.jsx)(n.li,{children:"The component maintains internal state of managed entities for performance"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"known-limitations",children:"Known Limitations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Source URLs must be accessible and return valid JSON"}),"\n",(0,s.jsx)(n.li,{children:"Some segment types may have limited support for certain features"}),"\n",(0,s.jsx)(n.li,{children:"The component is currently in beta and APIs may change"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},2478:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/managed-street-ui-sidebar-b9faf411881141d3e73725c93eedd6cc.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>d});var s=t(7294);const r={},i=s.createContext(r);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);